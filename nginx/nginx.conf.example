# Nginx 配置示例 - 英语听力训练应用
# 复制此文件为 nginx.conf 并根据实际环境修改配置

# 全局配置
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件配置
events {
    worker_connections 1024;
    use epoll;
}

# HTTP 配置
http {
    # 基础设置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 上传文件大小限制
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # 缓冲区设置
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    
    # 速率限制
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;
    
    # 上游服务器配置
    upstream app_backend {
        # 单实例配置
        server 127.0.0.1:3000 weight=1 max_fails=3 fail_timeout=30s;
        
        # 集群配置示例（如需要）
        # server 127.0.0.1:3001 weight=1 max_fails=3 fail_timeout=30s;
        # server 127.0.0.1:3002 weight=1 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    # HTTP 到 HTTPS 重定向服务器
    server {
        listen 80;
        listen [::]:80;
        server_name your-domain.com www.your-domain.com;
        
        # Let's Encrypt ACME 挑战
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # 重定向所有 HTTP 请求到 HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # HTTPS 主服务器
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name your-domain.com www.your-domain.com;
        
        # SSL 证书配置
        ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
        
        # SSL 安全配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/your-domain.com/chain.pem;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # 安全头部
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https://api.cerebras.ai; media-src 'self'; frame-src 'none'" always;
        
        # 根路径和应用路由
        location / {
            # 速率限制
            limit_req zone=api burst=20 nodelay;
            
            # 代理到 Next.js 应用
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # 代理缓存和超时设置
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            proxy_temp_file_write_size 8k;
        }
        
        # API 路由特殊处理
        location /api/ {
            # API 速率限制
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 增加 API 超时时间
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # 登录 API 特殊限制
        location /api/auth/ {
            limit_req zone=login burst=10 nodelay;
            
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # TTS API - 需要更长超时时间
        location /api/tts/ {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # TTS 生成需要更长时间
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # 静态文件缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # 尝试直接服务静态文件，否则代理到应用
            try_files $uri @proxy;
        }
        
        # 音频文件特殊处理
        location ~* \.wav$ {
            expires 1d;
            add_header Cache-Control "public, max-age=86400";
            add_header X-Content-Type-Options nosniff;
            
            # 音频文件流式传输支持
            add_header Accept-Ranges bytes;
            
            # 尝试直接服务，否则代理
            try_files $uri @proxy;
        }
        
        # 静态文件代理回退
        location @proxy {
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Next.js 静态文件和资源
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
        
        # 管理员面板路由
        location /admin {
            # 更严格的速率限制
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 可选：IP 白名单（取消注释并设置允许的 IP）
            # allow 192.168.1.0/24;
            # allow 10.0.0.0/8;
            # deny all;
        }
        
        # 健康检查端点
        location /api/health {
            access_log off;
            proxy_pass http://app_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # 健康检查快速超时
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # 拒绝访问敏感文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 拒绝访问配置文件
        location ~* \.(env|conf|config|ini|log|bak)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # robots.txt
        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow: /admin\nDisallow: /api\n";
        }
        
        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /500.html;
        
        # 错误页面位置
        location = /404.html {
            internal;
            proxy_pass http://app_backend;
        }
        
        location = /500.html {
            internal;
            proxy_pass http://app_backend;
        }
    }
    
    # 开发环境配置示例（可选）
    # server {
    #     listen 8080;
    #     server_name dev.your-domain.com localhost;
    #     
    #     access_log /var/log/nginx/dev.access.log;
    #     error_log /var/log/nginx/dev.error.log;
    #     
    #     location / {
    #         proxy_pass http://127.0.0.1:3000;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    # }
}

# 配置说明：
# 1. 将 your-domain.com 替换为实际域名
# 2. 更新 SSL 证书路径
# 3. 根据需要调整速率限制和缓存策略
# 4. 在生产环境中启用管理员 IP 白名单
# 5. 根据服务器性能调整 worker_processes 和 worker_connections
# 6. 定期更新 SSL 配置以保持安全性